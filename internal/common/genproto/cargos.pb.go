// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: cargos.proto

package genproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMatchingCargosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Origin        string                 `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination   string                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMatchingCargosRequest) Reset() {
	*x = GetMatchingCargosRequest{}
	mi := &file_cargos_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMatchingCargosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchingCargosRequest) ProtoMessage() {}

func (x *GetMatchingCargosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchingCargosRequest.ProtoReflect.Descriptor instead.
func (*GetMatchingCargosRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{0}
}

func (x *GetMatchingCargosRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetMatchingCargosRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type CargoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cargos        []*Cargo               `protobuf:"bytes,1,rep,name=cargos,proto3" json:"cargos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CargoResponse) Reset() {
	*x = CargoResponse{}
	mi := &file_cargos_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CargoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoResponse) ProtoMessage() {}

func (x *CargoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoResponse.ProtoReflect.Descriptor instead.
func (*CargoResponse) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{1}
}

func (x *CargoResponse) GetCargos() []*Cargo {
	if x != nil {
		return x.Cargos
	}
	return nil
}

type Cargo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status            string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	MaxCapacity       *Capacity              `protobuf:"bytes,4,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`
	CurrentLoad       *Capacity              `protobuf:"bytes,5,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	Carriers          []string               `protobuf:"bytes,6,rep,name=carriers,proto3" json:"carriers,omitempty"`
	Itineraries       []*Itinerary           `protobuf:"bytes,7,rep,name=itineraries,proto3" json:"itineraries,omitempty"`
	Shipments         []string               `protobuf:"bytes,8,rep,name=shipments,proto3" json:"shipments,omitempty"`
	LastKnownLocation string                 `protobuf:"bytes,9,opt,name=last_known_location,json=lastKnownLocation,proto3" json:"last_known_location,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Cargo) Reset() {
	*x = Cargo{}
	mi := &file_cargos_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cargo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cargo) ProtoMessage() {}

func (x *Cargo) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cargo.ProtoReflect.Descriptor instead.
func (*Cargo) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{2}
}

func (x *Cargo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cargo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cargo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Cargo) GetMaxCapacity() *Capacity {
	if x != nil {
		return x.MaxCapacity
	}
	return nil
}

func (x *Cargo) GetCurrentLoad() *Capacity {
	if x != nil {
		return x.CurrentLoad
	}
	return nil
}

func (x *Cargo) GetCarriers() []string {
	if x != nil {
		return x.Carriers
	}
	return nil
}

func (x *Cargo) GetItineraries() []*Itinerary {
	if x != nil {
		return x.Itineraries
	}
	return nil
}

func (x *Cargo) GetShipments() []string {
	if x != nil {
		return x.Shipments
	}
	return nil
}

func (x *Cargo) GetLastKnownLocation() string {
	if x != nil {
		return x.LastKnownLocation
	}
	return ""
}

type Capacity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Weight        float64                `protobuf:"fixed64,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume        float64                `protobuf:"fixed64,2,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Capacity) Reset() {
	*x = Capacity{}
	mi := &file_cargos_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Capacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capacity) ProtoMessage() {}

func (x *Capacity) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capacity.ProtoReflect.Descriptor instead.
func (*Capacity) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{3}
}

func (x *Capacity) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Capacity) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type Itinerary struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Location             string                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	EstimatedTimeArrival *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=estimated_time_arrival,json=estimatedTimeArrival,proto3" json:"estimated_time_arrival,omitempty"`
	ActualTimeArrival    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=actual_time_arrival,json=actualTimeArrival,proto3" json:"actual_time_arrival,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Itinerary) Reset() {
	*x = Itinerary{}
	mi := &file_cargos_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Itinerary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Itinerary) ProtoMessage() {}

func (x *Itinerary) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Itinerary.ProtoReflect.Descriptor instead.
func (*Itinerary) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{4}
}

func (x *Itinerary) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Itinerary) GetEstimatedTimeArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedTimeArrival
	}
	return nil
}

func (x *Itinerary) GetActualTimeArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualTimeArrival
	}
	return nil
}

type CreateCargoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Origin        string                 `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	MaxCapacity   *Capacity              `protobuf:"bytes,4,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCargoRequest) Reset() {
	*x = CreateCargoRequest{}
	mi := &file_cargos_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCargoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCargoRequest) ProtoMessage() {}

func (x *CreateCargoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCargoRequest.ProtoReflect.Descriptor instead.
func (*CreateCargoRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCargoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCargoRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *CreateCargoRequest) GetMaxCapacity() *Capacity {
	if x != nil {
		return x.MaxCapacity
	}
	return nil
}

type GetCargosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCargosRequest) Reset() {
	*x = GetCargosRequest{}
	mi := &file_cargos_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCargosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCargosRequest) ProtoMessage() {}

func (x *GetCargosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCargosRequest.ProtoReflect.Descriptor instead.
func (*GetCargosRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{6}
}

func (x *GetCargosRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type LoadShipmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LocationId    string                 `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	ShipmentId    string                 `protobuf:"bytes,2,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadShipmentRequest) Reset() {
	*x = LoadShipmentRequest{}
	mi := &file_cargos_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadShipmentRequest) ProtoMessage() {}

func (x *LoadShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadShipmentRequest.ProtoReflect.Descriptor instead.
func (*LoadShipmentRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{7}
}

func (x *LoadShipmentRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *LoadShipmentRequest) GetShipmentId() string {
	if x != nil {
		return x.ShipmentId
	}
	return ""
}

type MarkArrivalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CargoId       string                 `protobuf:"bytes,1,opt,name=cargo_id,json=cargoId,proto3" json:"cargo_id,omitempty"`
	LocationId    string                 `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkArrivalRequest) Reset() {
	*x = MarkArrivalRequest{}
	mi := &file_cargos_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkArrivalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkArrivalRequest) ProtoMessage() {}

func (x *MarkArrivalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkArrivalRequest.ProtoReflect.Descriptor instead.
func (*MarkArrivalRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{8}
}

func (x *MarkArrivalRequest) GetCargoId() string {
	if x != nil {
		return x.CargoId
	}
	return ""
}

func (x *MarkArrivalRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

type UnloadShipmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CargoId       string                 `protobuf:"bytes,1,opt,name=cargo_id,json=cargoId,proto3" json:"cargo_id,omitempty"`
	ShipmentId    string                 `protobuf:"bytes,2,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnloadShipmentRequest) Reset() {
	*x = UnloadShipmentRequest{}
	mi := &file_cargos_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnloadShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadShipmentRequest) ProtoMessage() {}

func (x *UnloadShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadShipmentRequest.ProtoReflect.Descriptor instead.
func (*UnloadShipmentRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{9}
}

func (x *UnloadShipmentRequest) GetCargoId() string {
	if x != nil {
		return x.CargoId
	}
	return ""
}

func (x *UnloadShipmentRequest) GetShipmentId() string {
	if x != nil {
		return x.ShipmentId
	}
	return ""
}

type AssignCarrierRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CargoId       string                 `protobuf:"bytes,1,opt,name=cargo_id,json=cargoId,proto3" json:"cargo_id,omitempty"`
	CarrierIds    []string               `protobuf:"bytes,2,rep,name=carrier_ids,json=carrierIds,proto3" json:"carrier_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignCarrierRequest) Reset() {
	*x = AssignCarrierRequest{}
	mi := &file_cargos_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignCarrierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignCarrierRequest) ProtoMessage() {}

func (x *AssignCarrierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignCarrierRequest.ProtoReflect.Descriptor instead.
func (*AssignCarrierRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{10}
}

func (x *AssignCarrierRequest) GetCargoId() string {
	if x != nil {
		return x.CargoId
	}
	return ""
}

func (x *AssignCarrierRequest) GetCarrierIds() []string {
	if x != nil {
		return x.CarrierIds
	}
	return nil
}

type AssignRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CargoId       string                 `protobuf:"bytes,1,opt,name=cargo_id,json=cargoId,proto3" json:"cargo_id,omitempty"`
	Itineraries   []*Itinerary           `protobuf:"bytes,2,rep,name=itineraries,proto3" json:"itineraries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignRouteRequest) Reset() {
	*x = AssignRouteRequest{}
	mi := &file_cargos_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRouteRequest) ProtoMessage() {}

func (x *AssignRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargos_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRouteRequest.ProtoReflect.Descriptor instead.
func (*AssignRouteRequest) Descriptor() ([]byte, []int) {
	return file_cargos_proto_rawDescGZIP(), []int{11}
}

func (x *AssignRouteRequest) GetCargoId() string {
	if x != nil {
		return x.CargoId
	}
	return ""
}

func (x *AssignRouteRequest) GetItineraries() []*Itinerary {
	if x != nil {
		return x.Itineraries
	}
	return nil
}

var File_cargos_proto protoreflect.FileDescriptor

var file_cargos_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0d,
	0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x22, 0xd2, 0x02, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x67, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0c,
	0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x69, 0x74, 0x69, 0x6e, 0x65, 0x72,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x69, 0x6e, 0x65, 0x72, 0x61, 0x72, 0x79,
	0x52, 0x0b, 0x69, 0x74, 0x69, 0x6e, 0x65, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x4b, 0x6e,
	0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x08, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x09, 0x49, 0x74, 0x69, 0x6e,
	0x65, 0x72, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x50, 0x0a, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x22,
	0x77, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x57,
	0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x41,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x55, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52,
	0x0a, 0x14, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x66, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x69, 0x74, 0x69, 0x6e, 0x65, 0x72, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x69, 0x6e, 0x65, 0x72, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x69,
	0x74, 0x69, 0x6e, 0x65, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x32, 0xdc, 0x04, 0x0a, 0x0c, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x67,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x67, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x4c, 0x6f,
	0x61, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x55, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x70, 0x72, 0x6f, 0x79, 0x79, 0x61, 0x6e,
	0x2f, 0x67, 0x6f, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_cargos_proto_rawDescOnce sync.Once
	file_cargos_proto_rawDescData []byte
)

func file_cargos_proto_rawDescGZIP() []byte {
	file_cargos_proto_rawDescOnce.Do(func() {
		file_cargos_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cargos_proto_rawDesc), len(file_cargos_proto_rawDesc)))
	})
	return file_cargos_proto_rawDescData
}

var file_cargos_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_cargos_proto_goTypes = []any{
	(*GetMatchingCargosRequest)(nil), // 0: protobuf.GetMatchingCargosRequest
	(*CargoResponse)(nil),            // 1: protobuf.CargoResponse
	(*Cargo)(nil),                    // 2: protobuf.Cargo
	(*Capacity)(nil),                 // 3: protobuf.Capacity
	(*Itinerary)(nil),                // 4: protobuf.Itinerary
	(*CreateCargoRequest)(nil),       // 5: protobuf.CreateCargoRequest
	(*GetCargosRequest)(nil),         // 6: protobuf.GetCargosRequest
	(*LoadShipmentRequest)(nil),      // 7: protobuf.LoadShipmentRequest
	(*MarkArrivalRequest)(nil),       // 8: protobuf.MarkArrivalRequest
	(*UnloadShipmentRequest)(nil),    // 9: protobuf.UnloadShipmentRequest
	(*AssignCarrierRequest)(nil),     // 10: protobuf.AssignCarrierRequest
	(*AssignRouteRequest)(nil),       // 11: protobuf.AssignRouteRequest
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),            // 13: google.protobuf.Empty
}
var file_cargos_proto_depIdxs = []int32{
	2,  // 0: protobuf.CargoResponse.cargos:type_name -> protobuf.Cargo
	3,  // 1: protobuf.Cargo.max_capacity:type_name -> protobuf.Capacity
	3,  // 2: protobuf.Cargo.current_load:type_name -> protobuf.Capacity
	4,  // 3: protobuf.Cargo.itineraries:type_name -> protobuf.Itinerary
	12, // 4: protobuf.Itinerary.estimated_time_arrival:type_name -> google.protobuf.Timestamp
	12, // 5: protobuf.Itinerary.actual_time_arrival:type_name -> google.protobuf.Timestamp
	3,  // 6: protobuf.CreateCargoRequest.max_capacity:type_name -> protobuf.Capacity
	4,  // 7: protobuf.AssignRouteRequest.itineraries:type_name -> protobuf.Itinerary
	5,  // 8: protobuf.CargoService.CreateCargo:input_type -> protobuf.CreateCargoRequest
	6,  // 9: protobuf.CargoService.GetCargos:input_type -> protobuf.GetCargosRequest
	0,  // 10: protobuf.CargoService.GetMatchingCargos:input_type -> protobuf.GetMatchingCargosRequest
	7,  // 11: protobuf.CargoService.LoadShipment:input_type -> protobuf.LoadShipmentRequest
	8,  // 12: protobuf.CargoService.MarkArrival:input_type -> protobuf.MarkArrivalRequest
	9,  // 13: protobuf.CargoService.UnloadShipment:input_type -> protobuf.UnloadShipmentRequest
	10, // 14: protobuf.CargoService.AssignCarrier:input_type -> protobuf.AssignCarrierRequest
	11, // 15: protobuf.CargoService.AssignRoute:input_type -> protobuf.AssignRouteRequest
	13, // 16: protobuf.CargoService.CreateCargo:output_type -> google.protobuf.Empty
	1,  // 17: protobuf.CargoService.GetCargos:output_type -> protobuf.CargoResponse
	1,  // 18: protobuf.CargoService.GetMatchingCargos:output_type -> protobuf.CargoResponse
	13, // 19: protobuf.CargoService.LoadShipment:output_type -> google.protobuf.Empty
	13, // 20: protobuf.CargoService.MarkArrival:output_type -> google.protobuf.Empty
	13, // 21: protobuf.CargoService.UnloadShipment:output_type -> google.protobuf.Empty
	13, // 22: protobuf.CargoService.AssignCarrier:output_type -> google.protobuf.Empty
	13, // 23: protobuf.CargoService.AssignRoute:output_type -> google.protobuf.Empty
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_cargos_proto_init() }
func file_cargos_proto_init() {
	if File_cargos_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cargos_proto_rawDesc), len(file_cargos_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cargos_proto_goTypes,
		DependencyIndexes: file_cargos_proto_depIdxs,
		MessageInfos:      file_cargos_proto_msgTypes,
	}.Build()
	File_cargos_proto = out.File
	file_cargos_proto_goTypes = nil
	file_cargos_proto_depIdxs = nil
}
