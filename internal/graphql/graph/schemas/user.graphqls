directive @skipAuth on FIELD_DEFINITION

type User {
    id: ID!
    model_id: ID!
    type: String!
    entity: UserEntity
}

type UserEntity {
    name: String!
    email: String!
    location: Location
}

# Enums

enum OperatorType {
    depot_operator
    warehouse_operator
}

# Inputs

input RegisterAsOperatorInput {
    name: String!
    email: String!
    password: String!
    location_id: String!
    type: OperatorType!
}

input RegisterAsCourierInput {
    name: String!
    email: String!
    password: String!
    location_id: String!
}

input RegisterAsCarrierInput {
    name: String!
    email: String!
    password: String!
    location_id: String!
}

extend type Query {
    GetUser(id: ID!): User
}

extend type Mutation {
    Login(email: String!, password: String!): String! @skipAuth
    RegisterAsOperator(input: RegisterAsOperatorInput!): String! @skipAuth
    RegisterAsCourier(input: RegisterAsCourierInput!): String! @skipAuth
    RegisterAsCarrier(input: RegisterAsCarrierInput!): String! @skipAuth
}